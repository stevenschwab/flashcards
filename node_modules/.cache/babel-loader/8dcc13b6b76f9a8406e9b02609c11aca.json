{"ast":null,"code":"var _jsxFileName = \"/Users/stevenschwab/bloomtech/flashcards/src/components/NewQuizForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from \"../features/topics/TopicsSlice\";\nimport { thunkActionCreator } from \"../features/topics/TopicsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuizForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = selectTopics;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = []; // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = e => {\n    e.preventDefault();\n    setCards(cards.concat({\n      front: \"\",\n      back: \"\"\n    }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quiz-name\",\n        value: name,\n        onChange: e => setName(e.currentTarget.value),\n        placeholder: \"Quiz Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quiz-topic\",\n        onChange: e => setTopicId(e.currentTarget.value),\n        placeholder: \"Topic\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic.id,\n          children: topic.name\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-front-${index}`,\n          value: cards[index].front,\n          onChange: e => updateCardState(index, \"front\", e.currentTarget.value),\n          placeholder: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-back-${index}`,\n          value: cards[index].back,\n          onChange: e => updateCardState(index, \"back\", e.currentTarget.value),\n          placeholder: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeCard(e, index),\n          className: \"remove-card-button\",\n          children: \"Remove Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCardInputs,\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewQuizForm, \"NQDrdpZxCqeQr9IMnCSBacGpGA4=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewQuizForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuizForm\");","map":{"version":3,"sources":["/Users/stevenschwab/bloomtech/flashcards/src/components/NewQuizForm.js"],"names":["React","useState","useHistory","v4","uuidv4","ROUTES","selectTopics","thunkActionCreator","NewQuizForm","name","setName","cards","setCards","topicId","setTopicId","history","topics","handleSubmit","e","preventDefault","length","cardIds","push","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","card","i","updateCardState","side","value","newCards","slice","currentTarget","Object","values","map","topic","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from \"../features/topics/TopicsSlice\";\nimport { thunkActionCreator } from \"../features/topics/TopicsSlice\";\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = selectTopics;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}