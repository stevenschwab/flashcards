{"ast":null,"code":"var _jsxFileName = \"/Users/stevenschwab/bloomtech/flashcards/src/features/cards/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { selectCards } from \"./CardsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  id\n}) {\n  _s();\n\n  const cards = useSelector(selectCards);\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card\",\n      onClick: e => setFlipped(!flipped),\n      children: flipped ? card.back : card.front\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fuA2WHF94ztHmFoZyjk885oJyqE=\", true);\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/stevenschwab/bloomtech/flashcards/src/features/cards/Card.js"],"names":["React","useState","Link","useParams","selectCards","Card","id","cards","useSelector","card","flipped","setFlipped","e","back","front"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAGA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAsB;AAAA;;AACnC,QAAMC,KAAK,GAAGC,WAAW,CAACJ,WAAD,CAAzB;AACA,QAAMK,IAAI,GAAGF,KAAK,CAACD,EAAD,CAAlB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAGW,CAAD,IAAOD,UAAU,CAAC,CAACD,OAAF,CAAnD;AAAA,gBACGA,OAAO,GAAGD,IAAI,CAACI,IAAR,GAAeJ,IAAI,CAACK;AAD9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZuBT,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { selectCards } from \"./CardsSlice\";\n\n\nexport default function Card({ id }) {\n  const cards = useSelector(selectCards);\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}