{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { addQuizToTopic } from \"../topics/TopicsSlice\";\nexport const addQuizAddQuizId = quiz => {\n  const {\n    quizId,\n    name,\n    topicId,\n    cardIds\n  } = quiz;\n  return dispatch => {\n    dispatch(quizzesSlice.actions.addQuiz(quiz));\n    dispatch(addQuizToTopic({\n      quizId: quizId,\n      topicId: topicId\n    }));\n  };\n};\nexport const quizzesSlice = createSlice({\n  name: \"quizzes\",\n  initialState: {\n    quizzes: {}\n  },\n  reducers: {\n    addQuiz: (state, action) => {\n      const {\n        quizId,\n        name,\n        topicId,\n        cardIds\n      } = action.payload;\n      state.quizzes[quizId] = {\n        id: quizId,\n        name: name,\n        topicId: topicId,\n        cardIds: cardIds\n      };\n    }\n  }\n});\nexport const {\n  addQuiz\n} = quizzesSlice.actions;\nexport default quizzesSlice.reducer;\nexport const selectQuizzes = state => state.quizzes.quizzes;","map":{"version":3,"sources":["/Users/stevenschwab/bloomtech/flashcards/src/features/quizzes/QuizzesSlice.js"],"names":["createSlice","addQuizToTopic","addQuizAddQuizId","quiz","quizId","name","topicId","cardIds","dispatch","quizzesSlice","actions","addQuiz","initialState","quizzes","reducers","state","action","payload","id","reducer","selectQuizzes"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,IAAI,IAAI;AACpC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAqCJ,IAA3C;AACA,SAAQK,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqBC,OAArB,CAA6BR,IAA7B,CAAD,CAAR;AACAK,IAAAA,QAAQ,CAACP,cAAc,CAAE;AAAEG,MAAAA,MAAM,EAAEA,MAAV;AAAkBE,MAAAA,OAAO,EAAEA;AAA3B,KAAF,CAAf,CAAR;AACH,GAHD;AAIH,CANM;AAQP,OAAO,MAAMG,YAAY,GAAGT,WAAW,CAAC;AACpCK,EAAAA,IAAI,EAAE,SAD8B;AAEpCO,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE;AADC,GAFsB;AAKpCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,OAAO,EAAE,CAACI,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAM;AAAEZ,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,OAAhB;AAAyBC,QAAAA;AAAzB,UAAqCS,MAAM,CAACC,OAAlD;AACAF,MAAAA,KAAK,CAACF,OAAN,CAAcT,MAAd,IAAwB;AACpBc,QAAAA,EAAE,EAAEd,MADgB;AAEpBC,QAAAA,IAAI,EAAEA,IAFc;AAGpBC,QAAAA,OAAO,EAAEA,OAHW;AAIpBC,QAAAA,OAAO,EAAEA;AAJW,OAAxB;AAMH;AATK;AAL0B,CAAD,CAAhC;AAkBP,OAAO,MAAM;AAAEI,EAAAA;AAAF,IAAcF,YAAY,CAACC,OAAjC;AACP,eAAeD,YAAY,CAACU,OAA5B;AACA,OAAO,MAAMC,aAAa,GAAGL,KAAK,IAAIA,KAAK,CAACF,OAAN,CAAcA,OAA7C","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { addQuizToTopic } from \"../topics/TopicsSlice\";\n\nexport const addQuizAddQuizId = quiz => {\n    const { quizId, name, topicId, cardIds } = quiz;\n    return (dispatch) => {\n        dispatch(quizzesSlice.actions.addQuiz(quiz));\n        dispatch(addQuizToTopic( { quizId: quizId, topicId: topicId } ));\n    }\n};\n\nexport const quizzesSlice = createSlice({\n    name: \"quizzes\",\n    initialState: {\n        quizzes: {}\n    },\n    reducers: {\n        addQuiz: (state, action) => {\n            const { quizId, name, topicId, cardIds } = action.payload;\n            state.quizzes[quizId] = {\n                id: quizId,\n                name: name,\n                topicId: topicId,\n                cardIds: cardIds\n            };\n        }\n    }\n});\n\nexport const { addQuiz } = quizzesSlice.actions;\nexport default quizzesSlice.reducer;\nexport const selectQuizzes = state => state.quizzes.quizzes;"]},"metadata":{},"sourceType":"module"}