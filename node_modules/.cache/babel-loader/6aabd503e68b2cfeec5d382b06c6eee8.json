{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { addQuizToTopic } from \"../features/quizzes/QuizzesSlice\";\nexport const {\n  thunkActionCreator\n} = payload => {\n  return dispatch => {\n    dispatch(addQuiz(payload));\n    dispatch(addQuizToTopic(payload));\n  };\n};\nexport const quizzesSlice = createSlice({\n  name: \"quizzes\",\n  initialState: {\n    quizzes: {}\n  },\n  reducers: {\n    addQuiz: (state, action) => {\n      state.topics[action.payload.id] = { ...action.payload,\n        cardIds: []\n      };\n    }\n  }\n});\nexport const {\n  addQuiz\n} = quizzesSlice.actions;\nexport default quizzesSlice.reducer;\nexport const selectQuizzes = state => state.topics.topics;","map":{"version":3,"sources":["/Users/stevenschwab/bloomtech/flashcards/src/features/quizzes/QuizzesSlice.js"],"names":["createSlice","addQuizToTopic","thunkActionCreator","payload","dispatch","addQuiz","quizzesSlice","name","initialState","quizzes","reducers","state","action","topics","id","cardIds","actions","reducer","selectQuizzes"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AAEA,OAAO,MAAM;AAACC,EAAAA;AAAD,IAAwBC,OAAD,IAAa;AAC7C,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,OAAO,CAACF,OAAD,CAAR,CAAR;AACAC,IAAAA,QAAQ,CAACH,cAAc,CAACE,OAAD,CAAf,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMG,YAAY,GAAGN,WAAW,CAAC;AACpCO,EAAAA,IAAI,EAAE,SAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE;AADC,GAFsB;AAKpCC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,OAAO,EAAE,CAACM,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACE,MAAN,CAAaD,MAAM,CAACT,OAAP,CAAeW,EAA5B,IAAkC,EAAE,GAAGF,MAAM,CAACT,OAAZ;AAAqBY,QAAAA,OAAO,EAAE;AAA9B,OAAlC;AACH;AAHK;AAL0B,CAAD,CAAhC;AAYP,OAAO,MAAM;AAAEV,EAAAA;AAAF,IAAcC,YAAY,CAACU,OAAjC;AACP,eAAeV,YAAY,CAACW,OAA5B;AACA,OAAO,MAAMC,aAAa,GAAGP,KAAK,IAAIA,KAAK,CAACE,MAAN,CAAaA,MAA5C","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { addQuizToTopic } from \"../features/quizzes/QuizzesSlice\";\n\nexport const {thunkActionCreator} = (payload) => {\n    return (dispatch) => {\n        dispatch(addQuiz(payload));\n        dispatch(addQuizToTopic(payload));\n    };\n};\n\nexport const quizzesSlice = createSlice({\n    name: \"quizzes\",\n    initialState: {\n        quizzes: {}\n    },\n    reducers: {\n        addQuiz: (state, action) => {\n            state.topics[action.payload.id] = { ...action.payload, cardIds: [] };\n        }\n    }\n});\n\nexport const { addQuiz } = quizzesSlice.actions;\nexport default quizzesSlice.reducer;\nexport const selectQuizzes = state => state.topics.topics;"]},"metadata":{},"sourceType":"module"}